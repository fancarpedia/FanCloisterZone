name: Build/release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, ubuntu-latest, windows-latest]

    steps:
      # Checkout code
      - name: Check out Git repository
        uses: actions/checkout@v3

      # Install Node.js, NPM, Yarn
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies
      - name: Install dependencies
        run: yarn install

      # Determine macOS signing identity (macOS only)
      - name: Determine macOS code signing identity
        if: matrix.os == 'macos-13'
        shell: bash
        id: mac_identity
        run: |
          # Allow command to fail if no identity is found
          IDENTITY=$(security find-identity -v -p codesigning | grep "Developer ID Application" | awk '{print $2}' || true)

          if [ -z "$IDENTITY" ]; then
            echo "No macOS signing identity found. Will skip code signing."
            echo "MAC_IDENTITY=null" >> $GITHUB_ENV
          else
            echo "Found macOS signing identity: $IDENTITY"
            echo "MAC_IDENTITY=$IDENTITY" >> $GITHUB_ENV

      # Build macOS app (conditionally signed)
      - name: Build macOS app
        if: matrix.os == 'macos-13'
        shell: bash
        run: |
          if [ "$MAC_IDENTITY" = "null" ]; then
            echo "Building macOS app without code signing..."
            npx electron-builder -c builder.config.js --mac.identity=null
          else
            echo "Building macOS app with code signing..."
            npx electron-builder -c builder.config.js --mac
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      # Build Linux/Windows app
      - name: Build Linux/Windows app
        if: matrix.os != 'macos-13'
        run: npx electron-builder -c builder.config.js
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
